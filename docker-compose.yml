version: '3.3'
services:
  mongo:
    image: uanorman/mongo
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=false"
    ports:
      - "27017:27017"
    networks:
      - writers_network
    volumes:
      - data:/data/db

  authors-backend:
    image: uanorman/writers-spring-backend
    depends_on:
      - mongo
    ports:
      - "8082:8082"
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.backend=authors-backend"
        - "traefik.frontend.rule=Host:api.authors.com"
        - "traefik.enable=true"
        - "traefik.port=8082"
        - "traefik.docker.network=traefik-net"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MONGO_DB=mongo
    networks:
      - writers_network
      - traefik-net
    entrypoint: bash -c "exec java $JAVA_OPTS -Djava.security.egd=file:/dev/./urandom -jar /app.jar"


  books-backend:
    image: uanorman/flask-books
    depends_on:
      - mongo
    ports:
      - "5000:5000"
    environment:
      - ENV_CONFIG=production
      - DATABASE=mongo
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.backend=books-backend"
        - "traefik.frontend.rule=Host:api.books.com"
        - "traefik.enable=true"
        - "traefik.port=5000"
        - "traefik.docker.network=traefik-net"
    networks:
      - writers_network
      - traefik-net

  authors-frontend:
    image: uanorman/writers-front
    ports:
      - "3000:3000"
    networks:
      - traefik-net
    deploy:
      replicas: 2
      labels:
        - "traefik.backend=authors-frontend"
        - "traefik.frontend.rule=Host:authors.com"
        - "traefik.enable=true"
        - "traefik.port=3000"
        - "traefik.docker.network=traefik-net"

  traefik:
    image: traefik
    deploy:
      placement:
        constraints: [node.role == manager]
    command: --web --docker --docker.swarmmode --docker.watch --docker.domain=traefik --logLevel=DEBUG
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik-net

volumes:
  data:
networks:
  writers_network:
    external: true
  traefik-net:
    external: true